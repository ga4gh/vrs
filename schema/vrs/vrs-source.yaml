# VRS uses yaml as the source document for json schema
#
# To convert vrs.yaml to vrs.json:
#   make vrs.json
# You'll probably have to `pip install pyyaml` first.
#
# To watch for changes and update automatically:
#   make watch &

# https://json-schema.org/understanding-json-schema/reference/schema.html
$schema: "https://json-schema.org/draft/2020-12/schema"
$id: "https://w3id.org/ga4gh/schema/vrs/2.x/vrs-source.yaml"
title: "GA4GH-VRS-Definitions"
type: object
strict: true

imports:
  gks.core: ../gks-common/core-source.yaml

namespaces:
  gks.common: ../gks-common/$defs/

$defs:
  # VRS definitions are presented top-down.  Everything rolls up to
  # Variation, which is a polymorphic abstraction of many kinds of
  # variation.

  # =============================================================================
  # Kinds of Variation
  # =============================================================================

  ValueObject:
    inherits: gks.core:Entity
    description: >-
      A contextual value whose equality is based on value, not identity.
      See https://en.wikipedia.org/wiki/Value_object for more on Value Objects.

  Ga4ghIdentifiableObject:
    inherits: ValueObject
    description: >-
      A contextual value object for which a GA4GH computed identifier can be created.
    ga4ghDigest:
      keys:
        - type
    heritableProperties:
      type:
        type: string
      digest:
        description: A sha512t24u digest created using the VRS Computed Identifier algorithm.
        type: string
        pattern: '^[0-9A-Za-z_\-]{32}$'

  Variation:
    inherits: Ga4ghIdentifiableObject
    description: >-
      A representation of the state of one or more biomolecules.
    oneOf:
      - $ref: "#/$defs/MolecularVariation"
      - $ref: "#/$defs/SystemicVariation"
    heritableProperties:
      expressions:
        type: array
        ordered: false
        items:
          $ref: "#/$defs/Expression"
    discriminator:
      propertyName: type

  Expression:
    type: object
    privateTo: Variation
    maturity: draft
    description: >-
      Representation of a variation by a specified nomenclature or syntax for a Variation object. 
      Common examples of expressions for the description of molecular variation include the HGVS 
      and ISCN nomenclatures.
    properties:
      syntax:
        type: string
        enum: ["hgvs.c", "hgvs.p", "hgvs.g", "hgvs.m", "hgvs.n", "hgvs.r", "iscn", "gnomad", "spdi"]
      value:
        type: string
      syntax_version:
        type: string
    required:
      - syntax
      - value

  MolecularVariation:
    inherits: Variation
    description: >-
      A :ref:`variation` on a contiguous molecule.
    oneOf:
      - $ref: "#/$defs/Allele"
      - $ref: "#/$defs/Haplotype"
    discriminator:
      propertyName: type

  SystemicVariation:
    inherits: Variation
    description: >-
      A Variation of multiple molecules in the context of a system, e.g.
      a genome, sample, or homologous chromosomes.
    oneOf:
      - $ref: "#/$defs/CopyNumberCount"
      - $ref: "#/$defs/CopyNumberChange"
    discriminator:
      propertyName: type

  # =============================================================================
  # IDENTIFIABLE TYPES
  # Have a `type` and `_id` attribute
  # =============================================================================

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Molecular Variation

  Allele:
    maturity: draft
    ga4ghDigest:
      prefix: VA
      keys:
        - location
        - state
    inherits: MolecularVariation
    description: >-
      The state of a molecule at a :ref:`Location`.
    type: object
    properties:
      type:
        type: string
        const: "Allele"
        default: "Allele"
        description: >-
          MUST be "Allele"
      location:
        oneOf:
          - $refCurie: gks.common:IRI
          - $ref: "#/$defs/Location"
        description: >-
          The location of the Allele
      state:
        $ref: "#/$defs/SequenceExpression"
        description: >-
          An expression of the sequence state
    required: [ "location", "state" ]

  Haplotype:
    maturity: draft
    ga4ghDigest:
      prefix: HT
      keys:
        - members
    inherits: MolecularVariation
    description: >-
      An ordered set of co-occurring :ref:`variants <Variation>` on the same molecule.
    type: "object"
    properties:
      type:
        type: string
        const: "Haplotype"
        default: "Haplotype"
        description: >-
          MUST be "Haplotype"
      members:
        type: array
        ordered: true
        minItems: 2
        uniqueItems: false
        items:
          oneOf:
            - $ref: "#/$defs/Adjacency"
            - $ref: "#/$defs/Allele"
            - $refCurie: gks.common:IRI
        description: >-
          A list of :ref:`Alleles <Allele>` and :ref:`Adjacencies <Adjacency>` that comprise a Haplotype. 
          Members must share the same reference sequence as adjacent members. Alleles should not have
          overlapping or adjacent coordinates with neighboring Alleles. Neighboring alleles should be ordered 
          by ascending coordinates, unless represented on a DNA inversion (following an Adjacency with 
          end-defined adjoinedSequences), in which case they should be ordered in descending coordinates. 
          Sequence references MUST be consistent for all members between and including the end of one 
          Adjacency and the beginning of another.
    required: [ "members" ]

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # SystemicVariation

  CopyNumber:
    ga4ghDigest:
      keys:
        - location
    inherits: SystemicVariation
    description: >-
      A measure of the copies of a :ref:`Location` within a system (e.g. genome, cell, etc.)
    heritableProperties:
      location:
        oneOf:
          - $refCurie: gks.common:IRI
          - $ref: "#/$defs/Location"
        description: >-
          A location for which the number of systemic copies is described.
    heritableRequired: [ "location" ]

  CopyNumberCount:
    maturity: draft
    ga4ghDigest:
      keys:
        - copies
      prefix: CN
    inherits: CopyNumber
    type: object
    description: >-
      The absolute count of discrete copies of a :ref:`Location` or :ref:`Gene`,
      within a system (e.g. genome, cell, etc.).
    properties:
      type:
        type: string
        const: "CopyNumberCount"
        default: "CopyNumberCount"
        description: >-
          MUST be "CopyNumberCount"
      copies:
        oneOf:
          - type: integer
          - $ref: "#/$defs/Range"
        description: >-
          The integral number of copies of the subject in a system
    required: [ "copies" ]

  CopyNumberChange:
    maturity: draft
    ga4ghDigest:
      keys:
        - copyChange
      prefix: CX
    inherits: CopyNumber
    type: object
    description: >-
      An assessment of the copy number of a :ref:`Location` or a :ref:`Gene` within a system (e.g. genome, cell,
      etc.) relative to a baseline ploidy.
    properties:
      type:
        type: string
        const: "CopyNumberChange"
        default: "CopyNumberChange"
        description: >-
          MUST be "CopyNumberChange"
      copyChange:
        type: string
        enum: [ "efo:0030069", "efo:0020073", "efo:0030068", "efo:0030067", "efo:0030064", "efo:0030070",
                "efo:0030071", "efo:0030072" ]
        description: >-
          MUST be one of "efo:0030069" (complete genomic loss), "efo:0020073" (high-level loss),
          "efo:0030068" (low-level loss), "efo:0030067" (loss), "efo:0030064" (regional base ploidy),
          "efo:0030070" (gain), "efo:0030071" (low-level gain), "efo:0030072" (high-level gain).
    required: [ "copyChange" ]

#  Genotype:
#    maturity: draft
#    ga4ghDigest:
#      keys:
#        - members
#        - count
#      prefix: GT
#    inherits: SystemicVariation
#    description: >-
#      A quantified set of _in-trans_ :ref:`MolecularVariation` at a genomic locus.
#    type: object
#    properties:
#      type:
#        type: string
#        const: "Genotype"
#        default: "Genotype"
#        description: >-
#          MUST be "Genotype"
#      members:
#        type: array
#        ordered: false
#        uniqueItems: true
#        minItems: 1
#        items:
#          $ref: "#/$defs/GenotypeMember"
#        description: >-
#          Each GenotypeMember in `members` describes a :ref:`MolecularVariation`
#          and the count of that variation at the locus.
#      count:
#        oneOf:
#          - type: integer
#          - $ref: "#/$defs/Range"
#        description: >-
#          The total number of copies of all :ref:`MolecularVariation` at this locus,
#          MUST be greater than or equal to the sum of :ref:`GenotypeMember` copy counts.
#          If greater than the total counts, this implies additional
#          :ref:`MolecularVariation` that are expected to exist but are not explicitly
#          indicated.
#    required: [ "members", "count" ]

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Locations

  Location:
    inherits: Ga4ghIdentifiableObject
    description: >-
      A contiguous segment of a biological sequence.
    $ref: "#/$defs/SequenceLocation"
    discriminator:
      propertyName: type

  SequenceLocation:
    maturity: draft
    ga4ghDigest:
      keys:
        - start
        - end
        - sequenceReference
      prefix: SL
    inherits: Location
    description: >-
      A :ref:`Location` defined by an interval on a referenced :ref:`Sequence`.
    type: object
    properties:
      type:
        type: string
        const: "SequenceLocation"
        default: "SequenceLocation"
        description: MUST be "SequenceLocation"
      sequenceReference:
        oneOf:
          - $refCurie: gks.common:IRI
          - $ref: "#/$defs/SequenceReference"
        description: A reference to a :ref:`Sequence` on which the location is defined.
      start:
        oneOf:
          - type: integer
          - $ref: "#/$defs/Range"
        description: >-
          The start coordinate or range of the SequenceLocation.
          The minimum value of this coordinate or range is 0.
          MUST represent a coordinate or range less than or equal to the value of `end`.
      end:
        oneOf:
          - type: integer
          - $ref: "#/$defs/Range"
        description: >-
          The end coordinate or range of the SequenceLocation.
          The minimum value of this coordinate or range is 0.
          MUST represent a coordinate or range greater than or equal to the value of `start`.

  SequenceReference:
    maturity: draft
    inherits: ValueObject
    ga4ghDigest:
      assigned: true # This special property indicates that the `digest` field follows an alternate convention
                     # and is expected to have the value assigned following that convention. For SequenceReference,
                     # it is expected the digest will be the refget accession value without the `SQ.` prefix.
    type: object
    description: A sequence of nucleic or amino acid character codes.
    properties:
      type:
        type: string
        const: SequenceReference
      refgetAccession:
        description: >-
          A `GA4GH RefGet <http://samtools.github.io/hts-specs/refget.html>` identifier for the referenced sequence, 
          using the sha512t24u digest.
        type: string
        pattern: '^SQ.[0-9A-Za-z_\-]{32}$'
      residueAlphabet:
        type: string
        description: >-
          The interpretation of the character codes referred to by the refget accession, where "aa" specifies an
          amino acid character set, and "na" specifies a nucleic acid character set.
        enum:
          - aa
          - na
    required:
      - refgetAccession

      #TODO: implementation guidance: digest property is RefGet TRUNC512

  # =============================================================================
  # NON-IDENTIFIABLE TYPES
  # These types have a `type` attribute
  # =============================================================================

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # SequenceExpression

  SequenceExpression:
    inherits: ValueObject
    ga4ghDigest:
      keys:
        - type
    description: >-
      An expression describing a :ref:`Sequence`.
    oneOf:
      - $ref: "#/$defs/LiteralSequenceExpression"
      - $ref: "#/$defs/ReferenceLengthExpression"
#      - $ref: "#/$defs/DerivedSequenceExpression"
#      - $ref: "#/$defs/RepeatedSequenceExpression"
#      - $ref: "#/$defs/ComposedSequenceExpression"
    discriminator:
      propertyName: type
    heritableProperties:
      type:
        type: string
        description: >-
          The SequenceExpression class type. MUST match child class type.
    heritableRequired:
      - type

  ReferenceLengthExpression:
    maturity: draft
    inherits: SequenceExpression
    ga4ghDigest:
      keys:
        - length
        - repeatSubunitLength
    description: >-
      An expression of a length of a sequence from a repeating reference.
    type: object
    properties:
      type:
        type: string
        const: "ReferenceLengthExpression"
        default: "ReferenceLengthExpression"
        description: MUST be "ReferenceLengthExpression"
      length:
        oneOf:
          - type: integer
          - $ref: "#/$defs/Range"
        description: The number of residues in the expressed sequence.
      sequence:
        $ref: "#/$defs/SequenceString"
        description: the :ref:`Sequence` encoded by the Reference Length Expression.
      repeatSubunitLength:
        type: integer
        description: The number of residues in the repeat subunit.
    required:
      - length
      - repeatSubunitLength

  LengthExpression:
    maturity: draft
    inherits: SequenceExpression
    ga4ghDigest:
      keys:
        - length
    type: object
    description: A sequence expressed only by its length.
    properties:
      type:
        type: string
        const: "LengthExpression"
        default: "LengthExpression"
        description: MUST be "LengthExpression"
      length:
        oneOf:
          - $ref: "#/$defs/Range"
          - type: integer

  LiteralSequenceExpression:
    maturity: draft
    inherits: SequenceExpression
    ga4ghDigest:
      keys:
        - sequence
    description: An explicit expression of a Sequence.
    type: object
    properties:
      type:
        type: string
        const: "LiteralSequenceExpression"
        default: "LiteralSequenceExpression"
        description: MUST be "LiteralSequenceExpression"
      sequence:
        $ref: "#/$defs/SequenceString"
        description: the literal sequence
    required:
      - sequence

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Nested Classes

#  GenotypeMember:
#    privateTo: Genotype
#    inherits: ValueObject
#    ga4ghDigest:
#      keys:
#        - count
#        - variation
#    description: >-
#      A class for expressing the count of a specific :ref:`MolecularVariation` present
#      _in-trans_ at a genomic locus represented by a :ref:`Genotype`.
#    type: object
#    properties:
#      count:
#        oneOf:
#          - $ref: '#/$defs/Range'
#          - type: integer
#        description: >-
#          The number of copies of the `variation` at a :ref:`Genotype` locus.
#      variation:
#        oneOf:
#          - $ref: "#/$defs/Allele"
#          - $ref: "#/$defs/Haplotype"
#        description: >-
#          A :ref:`MolecularVariation` at a :ref:`Genotype` locus.
#    required: [ "count", "variation" ]

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Numerics, Comparators, and Ranges

  Range:
    maturity: draft
    description: An inclusive range of values bounded by one or more integers.
    type: array
    ordered: true
    items:
      oneOf:
        - type: integer
        - type: 'null'
    maxItems: 2
    minItems: 2

  Residue:
    maturity: draft
    description: >-
      A character representing a specific residue (i.e., molecular species)
      or groupings of these ("ambiguity codes"), using `one-letter IUPAC
      abbreviations <https://en.wikipedia.org/wiki/International_Union_of_Pure_and_Applied_Chemistry#Amino_acid_and_nucleotide_base_codes>`_
      for nucleic acids and amino acids.
    type: string
    pattern: '[A-Z*\-]'

  SequenceString:
    maturity: draft
    description: >-
      A character string of :ref:`Residues <Residue>` that represents a biological
      sequence using the conventional sequence order (5’-to-3’ for
      nucleic acid sequences, and amino-to-carboxyl for amino acid
      sequences). IUPAC ambiguity codes are permitted in Sequence Strings.
    type: string
    pattern: '^[A-Z*\-]*$'


  # =============================================================================
  # NEW PROPOSED SV Classes
  # These classes are not yet organized within the vrs-source.yaml document
  # These classes are under active discussion.
  # =============================================================================

  Adjacency:
    maturity: draft
    ga4ghDigest:
      prefix: AJ
      keys:
        - type
        - adjoinedSequences
        - linker
    inherits: MolecularVariation
    description:
      The `Adjacency` class can represent either the termination of a sequence 
      or the adjoining of the end of a sequence with the beginning of an
      adjacent sequence, potentially with an intervening linker sequence.
    type: object
    properties:
      type:
        type: string
        const: Adjacency
        default: Adjacency
        description: MUST be "Adjacency".
      adjoinedSequences:
        type: array
        uniqueItems: false
        ordered: true
        items:
          oneOf:
          - $refCurie: gks.common:IRI
          - $ref: '#/$defs/Location'
        description: The terminal sequence or pair of adjoined sequences that defines in the adjacency.
        minItems: 1
        maxItems: 2
      linker:
        $ref: '#/$defs/SequenceExpression'
        description: The sequence found between adjoined sequences.
#      homology:
#        # Only valid for breakends=2
#        type: boolean
#        default: false
#        description:
#          A flag indicating whether the location interval of the breakend
#          is due to the sequences at the breakends being homologous or
#          whether the interval is due to uncertainty regarding the actual
#          locations of the breakends.
#      terminal:
#        # TODO: can the schema encode a constraint that a terminal breakend cannot
#        # be part of a breakpoint?
#        type: boolean
#        default: false
#        description:
#          # Only valid for breakends=1
#          Indicates the end of the molecule
    required:
      - adjoinedSequences

#  Event:
#    description:
#      An event that results in a set of variants.
#    type: object
#    properties:
#      type:
#        type: string
#        const: Event
#        default: Event
#        description: MUST be "Event"
#      variants:
#        $ref: '#/definitions/VariationSet'
#      classification:
#        # TODO: what event ontology should we use?
#        type: string
#        description: Category of event
#    required:
#      - type
#      - variants
#      - classification
#    additionalProperties: true
